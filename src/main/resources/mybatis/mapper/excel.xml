<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="excel">
    <select id="createTable" parameterType="map">
        ${create_table}
    </select>

    <insert id="insertVal" parameterType="map">
        insert into ${tablename} values (${val})
    </insert>

    <select id="selectTname" parameterType="map" resultType="String">
        select table_name
        FROM USER_TAB_COLUMNS
        WHERE column_name in (${inval}) and COLUMN_ID = ${size}
    </select>

    <insert id="insertTableFileName" parameterType="filestorage">
        insert into FILE_STORAGE(TABLES_NAME, FILES_NAME)
        values (#{tablesName},#{filesName})
    </insert>

    <delete id="deleteCsvData" parameterType="map">
        delete from FILE_STORAGE where FILES_NAME=${filename}
    </delete>

    <select id="getFileNameList" resultType="filestorage">
        select lower(TABLES_NAME) as TABLES_NAME, lower(FILES_NAME) as FILES_NAME from FILE_STORAGE a where FILES_NAME not like '%_new%'
union all
select lower(TABLES_NAME) as TABLES_NAME, lower(FILES_NAME) as FILES_NAME from FILE_STORAGE b where FILES_NAME like '%_new%'
    </select>
    <select id="getFileNameListNew" resultType="filestorage">
        select TABLES_NAME, FILES_NAME from FILE_STORAGE a where FILES_NAME like '%_new%'
    </select>

    <select id="getTotalRows" parameterType="map" resultType="int">
        select count (*) from ${tableName}
    </select>



    <select id="getTableList" parameterType="pager" resultMap="tableMapList">
        select ENO, B.*
        from(
            select ROWNUM AS ENO, A.*
            from (
                    select *
                    from ${tableName}
                 ) A
            where ROWNUM &lt;= #{endRowNo}
            ) B
        where ENO &gt;= #{startRowNo}
    </select>
    <resultMap type="map" id="tableMapList" >
    </resultMap>



    <insert id="insertMacro" parameterType="macro">
        insert into MACRO values (#{macroName},#{macroFile1},#{macroFile2},#{macroFile3},#{macroFile4},#{macroFile5})
    </insert>

    <select id="getMacroList" resultType="macro">
        SELECT MACRO_NAME, MACRO_FILE1, MACRO_FILE2, MACRO_FILE3, MACRO_FILE4, MACRO_FILE5
        FROM MACRO
    </select>

    <delete id="deleteMacro" parameterType="macro">
        delete from MACRO where MACRO_NAME=#{macroName}
    </delete>

    <select id="getMacro" parameterType="map" resultType="macro">
        SELECT MACRO_NAME, MACRO_FILE1, MACRO_FILE2, MACRO_FILE3, MACRO_FILE4, MACRO_FILE5
        FROM MACRO where MACRO_NAME =${macroName}
    </select>

    <select id="getColumnNames" parameterType="map" resultMap="columnList">
        SELECT COLUMN_NAME FROM USER_TAB_COLUMNS WHERE TABLE_NAME = ${tableName}
    </select>
    <resultMap type="map" id="columnList" >
    </resultMap>

</mapper>